# 这里就是用来设置tomcat服务器的相关配置，第一个是设置服务器端口
# 第二个是设置虚拟项目名，如果不设置虚拟项目名，spring boot项目可以不用在地址栏不输入虚拟项目名就能访问项目，但是如果设置了虚拟项目名，就必须得输入虚拟项目名才能访问项目
# ServerProperties
server.port=8080
server.servlet.context-path=/ac

# 关掉缓存，这个操作就是给一个配置类注入数据，详细看java笔记的Properties类
# ThymeleafProperties
spring.thymeleaf.cache=false

# 因为导入的mybatis的包是spring boot整合的，所以不用再去创建XML配置文件去配置它了，直接在这里配置一些关键的内容，spring boot会自动进行配置的
# DataSourceProperties  这个配置的是数据库
# 这个是配置数据库 注意这里对数据库的所有配置，等号右边的内容除了要写的，其他不能多加任何东西，比如在最后有一个空格，就会导致数据库加载失败，所以一定要留心
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong&serverTimezone=GMT&useUnicode=true
spring.datasource.username=root
spring.datasource.password=123456
# 这个是连接池的类型，spring boot有很多连接池类型，这个是性能最好的
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 这个是配置连接池最大连接数
spring.datasource.hikari.maximum-pool-size=15
# 设置最小空闲连接
spring.datasource.hikari.minimum-idle=5
# 设置超时时间
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties  这个配置的是mybatis数据库连接池
# 映射配置文件的位置 这个classpath就是指的target中classes文件夹路径，所以要在resources文件夹中创建一个mapper文件夹用来存放xml，因为resource里面的东西最终会被编译到classes文件夹当中
mybatis.mapper-locations=classpath:mapper/*.xml
# 设置用来存放实体类的包名
mybatis.type-aliases-package=team.se.acommunity.entity
# 这个是启动自动生成组件
mybatis.configuration.useGeneratedKeys=true
# 本身sql中的字段是不区分大小写的，但是Java中的属性名应该使用驼峰命名发，开启了这个，他就会自动将Java类中的驼峰命名属性和数据库中的全部小写的属性匹配起来
mybatis.configuration.mapUnderscoreToCamelCase=true

# logger
logging.level.com.nowcoder.community=debug