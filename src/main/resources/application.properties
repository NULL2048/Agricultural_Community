# 这里就是用来设置tomcat服务器的相关配置，第一个是设置服务器端口
# 第二个是设置虚拟项目名，如果不设置虚拟项目名，spring boot项目可以不用在地址栏不输入虚拟项目名就能访问项目，但是如果设置了虚拟项目名，就必须得输入虚拟项目名才能访问项目
# ServerProperties
server.port=8080
server.servlet.context-path=/ac

# 关掉缓存，这个操作就是给一个配置类注入数据，详细看java笔记的Properties类
# ThymeleafProperties
spring.thymeleaf.cache=false

# 因为导入的mybatis的包是spring boot整合的，所以不用再去创建XML配置文件去配置它了，直接在这里配置一些关键的内容，spring boot会自动进行配置的
# DataSourceProperties  这个配置的是数据库
# 这个是配置数据库 注意这里对数据库的所有配置，等号右边的内容除了要写的，其他不能多加任何东西，比如在最后有一个空格，就会导致数据库加载失败，所以一定要留心
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong&serverTimezone=GMT&useUnicode=true
spring.datasource.username=root
spring.datasource.password=123456
# 这个是连接池的类型，spring boot有很多连接池类型，这个是性能最好的
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 这个是配置连接池最大连接数
spring.datasource.hikari.maximum-pool-size=15
# 设置最小空闲连接
spring.datasource.hikari.minimum-idle=5
# 设置超时时间
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties  这个配置的是mybatis数据库连接池
# 映射配置文件的位置 这个classpath就是指的target中classes文件夹路径，所以要在resources文件夹中创建一个mapper文件夹用来存放xml，因为resource里面的东西最终会被编译到classes文件夹当中
mybatis.mapper-locations=classpath:mapper/*.xml
# 设置用来存放实体类的包名
mybatis.type-aliases-package=team.se.acommunity.entity
# 这个是启动自动生成组件  就比如说创建账号的时候本来是没有id的，id时自动创建的，启动了这个自动生成组件之后，插入之后会自动生成id，并且会将生成的id赋值给model属性
mybatis.configuration.useGeneratedKeys=true
# 本身sql中的字段是不区分大小写的，但是Java中的属性名应该使用驼峰命名发，开启了这个，他就会自动将Java类中的驼峰命名属性和数据库中的全部小写的属性匹配起来
mybatis.configuration.mapUnderscoreToCamelCase=true

# logger   但是我们直接用logback-spring.xml进行日志配置是最方便的，所以就不在这里配置了
# 配置日志级别
# logging.level.team.se.acommunity=warn
# 配置日志输出位置
# logging.file=c:/Users/97307/Desktop/acommunity.log

# MailProperties
spring.mail.host=smtp.qq.com
# 一般邮箱的smtp端口号都是465
# spring.main.port=465
spring.mail.username=973071263@qq.com
spring.mail.password=dlwjukkwvuagbbdc
# 设置所使用协议
# spring.mail.protocol=smtps
# 下面这个表示来发送邮件的时候使用ssl安全连接协议
# spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtl.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# community  设置项目域名
community.path.domain=http://localhost:8080
community.path.upload=C:/Users/97307/Desktop/upload

# RedisProperties 下面这三个是必须要配置的属性，还有很多其他属性可以配置，但是非必须，这个项目可以直接用他们的默认值
# redis内置0-15 共16个库，这里是指定要使用那个数据库
spring.redis.database=11
# 设置本机地址
spring.redis.host=localhost
# 配置redis端口
spring.redis.port=6379

# KafkaProperties   要配置这个类
# 配置servers路径，也就是kafka安装时候设置的端口
spring.kafka.bootstrap-servers=localhost:9092
# 设置消费者的分组Id  就是说当前这个消费者分到了指定主题的哪一个分组  下面填入的id必须是在consumer.properties这个配置文件中已经配置添加的
spring.kafka.consumer.group-id=community-consumer-group
# 设置是否自动提交消费者的偏移量   消费者在读取了偏移量之后会记录下来，然后去做提交
spring.kafka.consumer.enable-auto-commit=true
# 设置自动提交的频率 多久自动提交一次 单位毫秒
spring.kafka.consumer.auto-commit-interval=3000

# ElasticsearchProperties   想要用java访问es服务器就需要配置这个类
# 设置集群的名字，在es配置文件里面也有设置，必须要这边设置的名字在es配置文件中的名字一致才可以
spring.data.elasticsearch.cluster-name=acommunity
# 配置节点 咱们这个项目只有本机这一个节点。es一般有两个端口，一个9200，一个9300，9200是http端口，9300是TCP端口，一般在整合在java中时就用9300端口
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
# 要注意es和redis都是基于netty的，所以他们两个之间是有冲突的，需要解决一下,解决方案在spring启动类中


